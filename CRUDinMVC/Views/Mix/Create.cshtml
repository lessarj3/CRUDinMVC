@model CathRepoCommon.Models.Mix


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3><font color="red">@TempData["Message"]</font></h3>
        <h3>Add A New Mix Recipe</h3>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MixName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MixName, new { htmlAttributes = new { @class = "form-control", Value = "Default Mix Name" } })
                @Html.ValidationMessageFor(model => model.MixName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CFx, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CFx, new { htmlAttributes = new { @class = "form-control", @id = "CFX", @onchange = "MixChar();", Value = 40 } })
                @Html.ValidationMessageFor(model => model.CFx, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SVO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SVO, new { htmlAttributes = new {  @class = "form-control", @id = "SVO", @onchange = "MixChar();", Value = 50 }})
                @Html.ValidationMessageFor(model => model.SVO, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Carbon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Carbon, new { htmlAttributes = new { @class = "form-control", Value = 5 } })
                @Html.ValidationMessageFor(model => model.Carbon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Binder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Binder, new { htmlAttributes = new { @class = "form-control", Value = 10 } })
                @Html.ValidationMessageFor(model => model.Binder, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.ActiveMaterial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ActiveMaterial, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @id = "ActiveMaterial" } })
                @Html.ValidationMessageFor(model => model.ActiveMaterial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ratio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ratio, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @id = "Ratio"} })
                @Html.ValidationMessageFor(model => model.Ratio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mAh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mAh, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", @id = "mAh"} })
                @Html.ValidationMessageFor(model => model.mAh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/ViewModels/MixViewModel.js"></script>
